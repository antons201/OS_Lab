1. После удаления ссылки процесс продолжит чтение файла. Причины этого описаны в документации:

"unlink удаляет имя из файловой системы. Если это имя было последней ссылкой на файл и больше нет процессов, которые
держат этот файл открытым, данный файл удаляется и место, которое он занимает освобождается для дальнейшего использования.

Если имя было посленей ссылкой на файл, но какие-либо процессы всё ещё держат этот файл открым, файл будет оставлен пока
последний файловый дескриптор, указывающий на него, не будет закрыт. "

2. Рассчитаем время работы программы следующим образом: мы знаем, что программа содержит 2 000 000 инструкций, каждая из
которых занимает 4 цикла. Значит всего будет выполнено 8 000 000 циклов. Тактовая частота процессора 8 МГц = 8 000 000 Гц.
Это означает, что процессор выполняет 8 000 000 циклов в секунду.  Соответственно, для нахождения времени, необходимо
поделить количество всех циклов на количество циклов в секунду, которое может выполнить процессор. Получим:
8 000 000/8 000 000 = 1 секунда - время выполнения программы.

3. Сначала определим смещение. Оно зависит от размера страницы: log2(размер страницы). Тогда:
Смещение = log2(2^10) = 10 бит. Таким образом, если виртуальный адрес состоит из 20 бит, а на смещение приходится 10, то
на виртуальный адрес страницы остается 20 - 10 = 10 бит. Тогда количество элементов в таблице страниц: 2^10 = 1024.

4. Рассмотрим три алгоритма диспетчеризации.
First Come First Serve(FCFS) - обслуживание в порядке поступления. Самый простой алгоритм. Он ставит процессы в очередь в
том порядке, в котором они поступают в готовую очередь. В этом случае процесс, который идет первым, будет выполнен первым,
а следующий процесс начнется только после того, как предыдущий будет полностью выполнен.
Оценим его по критериям: Время ожидания(среднее) - не оптимальное. Повышение приоритета "забытой" задачи - невозможно.
Время завершения - будет зависит от того, как расположены процессы в очереди. Вариативность времени завершения - высокая.

Shortest Job First (SJF) - обслуживание самого короткого задания первым. стратегия диспетчеризации процессора, при которой
процессор предоставляется в первую очередь наиболее короткому процессу из имеющихся в системе.
Время ожидания(среднее) - оптимально(особенно с прерыванием), т.к. в первую очередь выполняются самые короткие процессы.
Повышение приоритета "забытой" задачи - возможно. Время завершения - оптимально. В схеме без прерываний возможно увеличение
этого времени, если короткий процесс поступил после длинного. В схеме с перываниями это оптимально. Вариативность времени
завершения - невозможна для данного набора процессов.

Round Robin (RR) - предоставление всем процессам по очереди одинаковых квантов времени. При данной стратегии каждый процесс
получает небольшой квант процессорного времени, обычно – 10-100 миллисекунд. После того, как это время закончено, процесс
прерывается и помещается в конец очереди готовых процессов.
Время ожидания - не оптимально. Т.к. при большом количестве длинных процессов, выполнение коротких может занять много времени.
Повышение приоритета "забытой" задачи - невозможно. Время завершения - не оптимално. Вариативность времени завершения -
в зависимсоти от кванта времени. Если взять его большим, то система будет подобна FCFS и тогда это возможно. Если квант
времени малый, то вариативность невысокая.

FCFS приводит к высокой вариативности времени завершения в любом случае.